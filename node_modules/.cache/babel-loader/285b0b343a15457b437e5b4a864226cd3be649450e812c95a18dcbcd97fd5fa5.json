{"ast":null,"code":"var _jsxFileName = \"/Users/lwamaraya/Documents/lwam_zemikael/src/Projects.js\";\n// Projects.js\nimport React from \"react\";\nimport \"./Projects.css\";\n\n// Import images for your projects\nimport steamDexImage from \"./images/steam.png\";\nimport Roomie from \"./images/LOGO.png\";\nimport PianoRing from \"./images/PianoRing.png\";\nimport EMS from \"./images/EMS.jpeg\";\nimport CoffeeBuddy from \"./images/CoffeeBuddy.png\";\nimport Pico from \"./images/pico.jpeg\";\nimport LwamTMS from \"./images/LwamTMS.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  id: 1,\n  title: \"PianoRing\",\n  description: \"A piano learning device that combines haptic feedback with key guidance projection to facilitate independent learning. It features gloves with vibratory motors and LED indicators that synchronize with corresponding piano keys, offering real-time tactile and visual guidance. Designed to enhance muscle memory and finger coordination.\",\n  imageUrl: PianoRing,\n  projectUrl: \"https://youtu.be/HajAyAW5QAY?si=LhELFyv5BmgTrqcb\"\n}, {\n  id: 2,\n  title: \"Roomie\",\n  description: \"A Roommate Matching mobile application, developed using Flutter and Firebase. The app aims to connect individuals looking for roommates by matching profiles based on shared preferences and habits.\",\n  imageUrl: Roomie,\n  projectUrl: \"https://github.com/lwamzeche/Roommate_Matching?tab=readme-ov-file\"\n}, {\n  id: 3,\n  title: \"EMS for Touchscreens in VR\",\n  description: \"An individual research project aimed at overcoming the lack of haptic feedback in VR interactions using Electrical Muscle Stimulation (EMS). The work focuses on providing screen haptic feedback to improve the usability of virtual touchscreens in VR.\",\n  imageUrl: EMS,\n  projectUrl: \"https://drive.google.com/file/d/1duBV3BXTQirWYDLYiGaUR7t_sfzKKJJ3/view?usp=sharing\"\n}, {\n  id: 4,\n  title: \"Virtual Sensor\",\n  description: \"Currently developing a system aimed at enabling real-time control of physical resistance values through a web interface. The project uses a Raspberry Pi Pico to bridge a web server with variable resistance hardware, allowing users to input desired resistance values via a web interface.\",\n  imageUrl: Pico\n  // Add projectUrl if available\n}, {\n  id: 5,\n  title: \"CoffeeBuddy\",\n  description: \"A mobile app designed for tracking daily caffeine levels for individuals who depend on coffee for energy. The app calculates the amount of caffeine users should limit themselves to based on their weight, updating dynamically with user input and feedback.\",\n  imageUrl: CoffeeBuddy,\n  projectUrl: \"https://www.figma.com/proto/mQYCu43StvpWWiq25stbrn/Intro-to-HCI-Project?page-id=575%3A1174&node-id=1113-2561&viewport=101%2C115%2C0.04&t=eVlmdJYjOotpU24r-1&scaling=scale-down&content-scaling=fixed&starting-point-node-id=1113%3A2561\"\n}, {\n  id: 6,\n  title: \"Steam Dex\",\n  description: \"A website that analyzes various indie games from Steam, providing details such as price, budget, revenue, review count, and tags. It enables users to search for games by name, price, revenue, and tags.\",\n  imageUrl: steamDexImage,\n  projectUrl: \"https://steam-dex.com/\"\n}];\nfunction Projects() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: projects.map(project =>\n    /*#__PURE__*/\n    // Wrap the contents of the project card in an anchor tag if projectUrl exists\n    _jsxDEV(\"a\", {\n      href: project.projectUrl ? project.projectUrl : \"#\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"project-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: project.imageUrl,\n          alt: project.title,\n          className: \"project-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"project-title\",\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"project-description\",\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, project.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","steamDexImage","Roomie","PianoRing","EMS","CoffeeBuddy","Pico","LwamTMS","jsxDEV","_jsxDEV","projects","id","title","description","imageUrl","projectUrl","Projects","className","children","map","project","href","target","rel","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lwamaraya/Documents/lwam_zemikael/src/Projects.js"],"sourcesContent":["// Projects.js\nimport React from \"react\";\nimport \"./Projects.css\";\n\n// Import images for your projects\nimport steamDexImage from \"./images/steam.png\";\nimport Roomie from \"./images/LOGO.png\";\nimport PianoRing from \"./images/PianoRing.png\";\nimport EMS from \"./images/EMS.jpeg\";\nimport CoffeeBuddy from \"./images/CoffeeBuddy.png\";\nimport Pico from \"./images/pico.jpeg\";\nimport LwamTMS from \"./images/LwamTMS.png\";\n\nconst projects = [\n  {\n    id: 1,\n    title: \"PianoRing\",\n    description:\n      \"A piano learning device that combines haptic feedback with key guidance projection to facilitate independent learning. It features gloves with vibratory motors and LED indicators that synchronize with corresponding piano keys, offering real-time tactile and visual guidance. Designed to enhance muscle memory and finger coordination.\",\n    imageUrl: PianoRing,\n    projectUrl: \"https://youtu.be/HajAyAW5QAY?si=LhELFyv5BmgTrqcb\",\n  },\n  {\n    id: 2,\n    title: \"Roomie\",\n    description:\n      \"A Roommate Matching mobile application, developed using Flutter and Firebase. The app aims to connect individuals looking for roommates by matching profiles based on shared preferences and habits.\",\n    imageUrl: Roomie,\n    projectUrl:\n      \"https://github.com/lwamzeche/Roommate_Matching?tab=readme-ov-file\",\n  },\n  {\n    id: 3,\n    title: \"EMS for Touchscreens in VR\",\n    description:\n      \"An individual research project aimed at overcoming the lack of haptic feedback in VR interactions using Electrical Muscle Stimulation (EMS). The work focuses on providing screen haptic feedback to improve the usability of virtual touchscreens in VR.\",\n    imageUrl: EMS,\n    projectUrl:\n      \"https://drive.google.com/file/d/1duBV3BXTQirWYDLYiGaUR7t_sfzKKJJ3/view?usp=sharing\",\n  },\n  {\n    id: 4,\n    title: \"Virtual Sensor\",\n    description:\n      \"Currently developing a system aimed at enabling real-time control of physical resistance values through a web interface. The project uses a Raspberry Pi Pico to bridge a web server with variable resistance hardware, allowing users to input desired resistance values via a web interface.\",\n    imageUrl: Pico,\n    // Add projectUrl if available\n  },\n  {\n    id: 5,\n    title: \"CoffeeBuddy\",\n    description:\n      \"A mobile app designed for tracking daily caffeine levels for individuals who depend on coffee for energy. The app calculates the amount of caffeine users should limit themselves to based on their weight, updating dynamically with user input and feedback.\",\n    imageUrl: CoffeeBuddy,\n    projectUrl:\n      \"https://www.figma.com/proto/mQYCu43StvpWWiq25stbrn/Intro-to-HCI-Project?page-id=575%3A1174&node-id=1113-2561&viewport=101%2C115%2C0.04&t=eVlmdJYjOotpU24r-1&scaling=scale-down&content-scaling=fixed&starting-point-node-id=1113%3A2561\",\n  },\n  {\n    id: 6,\n    title: \"Steam Dex\",\n    description:\n      \"A website that analyzes various indie games from Steam, providing details such as price, budget, revenue, review count, and tags. It enables users to search for games by name, price, revenue, and tags.\",\n    imageUrl: steamDexImage,\n    projectUrl: \"https://steam-dex.com/\",\n  },\n  \n];\n\nfunction Projects() {\n  return (\n    <div className=\"projects-container\">\n      {/* <h1 className=\"projects-title\">Projects</h1> */}\n      {projects.map((project) => (\n        // Wrap the contents of the project card in an anchor tag if projectUrl exists\n        <a\n          key={project.id}\n          href={project.projectUrl ? project.projectUrl : \"#\"}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"project-card\"\n        >\n          <div className=\"project\">\n            <img\n              src={project.imageUrl}\n              alt={project.title}\n              className=\"project-image\"\n            />\n            <div className=\"project-details\">\n              <h2 className=\"project-title\">{project.title}</h2>\n              <p className=\"project-description\">{project.description}</p>\n            </div>\n          </div>\n        </a>\n      ))}\n    </div>\n  );\n}\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}